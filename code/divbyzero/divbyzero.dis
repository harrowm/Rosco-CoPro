
divbyzero.elf:     file format elf32-m68k


Disassembly of section .text.init:

00002000 <_init>:
    2000:	41fa fffe      	lea %pc@(2000 <_init>),%a0
    2004:	43f9 0000 2000 	lea 2000 <_init>,%a1
    200a:	203c 0000 20c4 	movel #8388,%d0
    2010:	9089           	subl %a1,%d0
    2012:	e488           	lsrl #2,%d0
    2014:	5380           	subql #1,%d0
    2016:	22d8           	movel %a0@+,%a1@+
    2018:	51c8 fffc      	dbf %d0,2016 <_init+0x16>
    201c:	4ef9 0000 2024 	jmp 2024 <_postinit>

Disassembly of section .text.postinit:

00002024 <_postinit>:
    2024:	203c 0000 2468 	movel #9320,%d0
    202a:	9089           	subl %a1,%d0
    202c:	e488           	lsrl #2,%d0
    202e:	2200           	movel %d0,%d1
    2030:	4841           	swap %d1
    2032:	6002           	bras 2036 <_postinit+0x12>
    2034:	22d8           	movel %a0@+,%a1@+
    2036:	51c8 fffc      	dbf %d0,2034 <_postinit+0x10>
    203a:	51c9 fff8      	dbf %d1,2034 <_postinit+0x10>

0000203e <_start>:
    203e:	2e78 0414      	moveal 414 <SDB_MEMSIZE>,%sp
    2042:	23f8 0490 0000 	movel 490 <EFP_PROG_EXIT>,2470 <SAVE_PROG_EXIT>
    2048:	2470 
    204a:	21fc 0000 2064 	movel #8292,490 <EFP_PROG_EXIT>
    2050:	0490 
    2052:	41f9 0000 23ba 	lea 23ba <__kinit>,%a0
    2058:	4e90           	jsr %a0@
    205a:	6124           	bsrs 2080 <CALL_CTORS>
    205c:	41f9 0000 20c4 	lea 20c4 <_postinit_end>,%a0
    2062:	4e90           	jsr %a0@
    2064:	21f9 0000 2470 	movel 2470 <SAVE_PROG_EXIT>,490 <EFP_PROG_EXIT>
    206a:	0490 
    206c:	42a7           	clrl %sp@-
    206e:	41f9 0000 23e6 	lea 23e6 <__cxa_finalize>,%a0
    2074:	4e90           	jsr %a0@
    2076:	588f           	addql #4,%sp
    2078:	6128           	bsrs 20a2 <CALL_DTORS>
    207a:	2078 0004      	moveal 4 <DUART_CRA>,%a0
    207e:	4ed0           	jmp %a0@

00002080 <CALL_CTORS>:
    2080:	48e7 0038      	moveml %a2-%a4,%sp@-
    2084:	45f9 0000 2468 	lea 2468 <_bss_start>,%a2
    208a:	47f9 0000 2468 	lea 2468 <_bss_start>,%a3
    2090:	598b           	subql #4,%a3
    2092:	b7ca           	cmpal %a2,%a3
    2094:	6506           	bcss 209c <CALL_CTORS+0x1c>
    2096:	2853           	moveal %a3@,%a4
    2098:	4e94           	jsr %a4@
    209a:	60f4           	bras 2090 <CALL_CTORS+0x10>
    209c:	4cdf 1c00      	moveml %sp@+,%a2-%a4
    20a0:	4e75           	rts

000020a2 <CALL_DTORS>:
    20a2:	48e7 0038      	moveml %a2-%a4,%sp@-
    20a6:	45f9 0000 2468 	lea 2468 <_bss_start>,%a2
    20ac:	47f9 0000 2468 	lea 2468 <_bss_start>,%a3
    20b2:	b5cb           	cmpal %a3,%a2
    20b4:	6708           	beqs 20be <CALL_DTORS+0x1c>
    20b6:	2852           	moveal %a2@,%a4
    20b8:	4e94           	jsr %a4@
    20ba:	588a           	addql #4,%a2
    20bc:	60f4           	bras 20b2 <CALL_DTORS+0x10>
    20be:	4cdf 1c00      	moveml %sp@+,%a2-%a4
    20c2:	4e75           	rts

Disassembly of section .text:

000020c4 <kmain>:
 */

// #include "stdio.h"
#include "debug_stub.h"

int kmain() {
    20c4:	4fef fff4      	lea %sp@(-12),%sp
    debug_stub();
    20c8:	4eb9 0000 20ec 	jsr 20ec <debug_stub>
    
    int i=0;
    20ce:	42af 0008      	clrl %sp@(8)
    int j=10;
    20d2:	700a           	moveq #10,%d0
    20d4:	2f40 0004      	movel %d0,%sp@(4)
    int k;

    k = j / i;
    20d8:	202f 0004      	movel %sp@(4),%d0
    20dc:	4c6f           	.short 0x4c6f
    20de:	0801 0008      	btst #8,%d1
    20e2:	2e80           	movel %d0,%sp@
    return k;
    20e4:	2017           	movel %sp@,%d0
}
    20e6:	4fef 000c      	lea %sp@(12),%sp
    20ea:	4e75           	rts

000020ec <debug_stub>:
    20ec:	700a           	moveq #10,%d0
    20ee:	43f8 0008      	lea 8 <DUART_ACR>,%a1
    20f2:	41fa 00f8      	lea %pc@(21ec <debug_stub+0x100>),%a0
    20f6:	22c8           	movel %a0,%a1@+
    20f8:	41e8 000c      	lea %a0@(12),%a0
    20fc:	5380           	subql #1,%d0
    20fe:	66f6           	bnes 20f6 <debug_stub+0xa>
    2100:	4e75           	rts
    2102:	4275 7320 6572 	clrw %a5@(6572,%d7:w:2)
    2108:	726f           	moveq #111,%d1
    210a:	7200           	moveq #0,%d1
    210c:	4164           	.short 0x4164
    210e:	6472           	bccs 2182 <debug_stub+0x96>
    2110:	6573           	bcss 2185 <debug_stub+0x99>
    2112:	7320           	.short 0x7320
    2114:	6572           	bcss 2188 <debug_stub+0x9c>
    2116:	726f           	moveq #111,%d1
    2118:	7200           	moveq #0,%d1
    211a:	496c           	.short 0x496c
    211c:	6c65           	bges 2183 <debug_stub+0x97>
    211e:	6761           	beqs 2181 <debug_stub+0x95>
    2120:	6c20           	bges 2142 <debug_stub+0x56>
    2122:	696e           	bvss 2192 <debug_stub+0xa6>
    2124:	7374           	.short 0x7374
    2126:	7275           	moveq #117,%d1
    2128:	6374           	blss 219e <debug_stub+0xb2>
    212a:	696f           	bvss 219b <debug_stub+0xaf>
    212c:	6e00 4469      	bgtw 6597 <_bss_end+0x91f>
    2130:	7669           	moveq #105,%d3
    2132:	7369           	.short 0x7369
    2134:	6f6e           	bles 21a4 <debug_stub+0xb8>
    2136:	2062           	moveal %a2@-,%a0
    2138:	7920           	.short 0x7920
    213a:	7a65           	moveq #101,%d5
    213c:	726f           	moveq #111,%d1
    213e:	0043 484b      	oriw #18507,%d3
    2142:	2069 6e73      	moveal %a1@(28275),%a0
    2146:	7472           	moveq #114,%d2
    2148:	7563           	.short 0x7563
    214a:	7469           	moveq #105,%d2
    214c:	6f6e           	bles 21bc <debug_stub+0xd0>
    214e:	0054 5241      	oriw #21057,%a4@
    2152:	5056           	addqw #8,%fp@
    2154:	2069 6e73      	moveal %a1@(28275),%a0
    2158:	7472           	moveq #114,%d2
    215a:	7563           	.short 0x7563
    215c:	7469           	moveq #105,%d2
    215e:	6f6e           	bles 21ce <debug_stub+0xe2>
    2160:	0050 7269      	oriw #29289,%a0@
    2164:	7669           	moveq #105,%d3
    2166:	6c65           	bges 21cd <debug_stub+0xe1>
    2168:	6765           	beqs 21cf <debug_stub+0xe3>
    216a:	2076 696f 6c61 	moveal %fp@(6c61)@(74696f6e),%a0
    2170:	7469 6f6e 
    2174:	0054 7261      	oriw #29281,%a4@
    2178:	6365           	blss 21df <debug_stub+0xf3>
    217a:	0024 4178      	orib #120,%a4@-
    217e:	7878           	moveq #120,%d4
    2180:	2069 6e73      	moveal %a1@(28275),%a0
    2184:	7472           	moveq #114,%d2
    2186:	7563           	.short 0x7563
    2188:	7469           	moveq #105,%d2
    218a:	6f6e           	bles 21fa <debug_stub+0x10e>
    218c:	0024 4678      	orib #120,%a4@-
    2190:	7878           	moveq #120,%d4
    2192:	2069 6e73      	moveal %a1@(28275),%a0
    2196:	7472           	moveq #114,%d2
    2198:	7563           	.short 0x7563
    219a:	7469           	moveq #105,%d2
    219c:	6f6e           	bles 220c <debug_stub+0x120>
    219e:	000d           	.short 0x000d
    21a0:	0a07 2a2a      	eorib #42,%d7
    21a4:	2a20           	movel %a0@-,%d5
    21a6:	536f 6674      	subqw #1,%sp@(26228)
    21aa:	7761           	.short 0x7761
    21ac:	7265           	moveq #101,%d1
    21ae:	2046           	moveal %d6,%a0
    21b0:	6169           	bsrs 221b <debug_stub+0x12f>
    21b2:	6c75           	bges 2229 <debug_stub+0x13d>
    21b4:	7265           	moveq #101,%d1
    21b6:	3a20           	movew %a0@-,%d5
    21b8:	0020 2866      	orib #102,%a0@-
    21bc:	6175           	bsrs 2233 <debug_stub+0x147>
    21be:	6c74           	bges 2234 <debug_stub+0x148>
    21c0:	2061           	moveal %a1@-,%a0
    21c2:	6464           	bccs 2228 <debug_stub+0x13c>
    21c4:	7220           	moveq #32,%d1
    21c6:	0029 000d 0a50 	orib #13,%a1@(2640)
    21cc:	433d           	.short 0x433d
    21ce:	0020 6f70      	orib #112,%a0@-
    21d2:	3d00           	movew %d0,%fp@-
    21d4:	2020           	movel %a0@-,%d0
    21d6:	2020           	movel %a0@-,%d0
    21d8:	2053           	moveal %a3@,%a0
    21da:	523d           	.short 0x523d
    21dc:	0020 2020      	orib #32,%a0@-
    21e0:	2055           	moveal %a5@,%a0
    21e2:	5350           	subqw #1,%a0@
    21e4:	3d00           	movew %d0,%fp@-
    21e6:	0d0a 0000      	movepw %a2@(0),%d6
    21ea:	0000 007c      	orib #124,%d0
    21ee:	0700           	btst %d3,%d0
    21f0:	48e7 ffff      	moveml %d0-%sp,%sp@-
    21f4:	7400           	moveq #0,%d2
    21f6:	606a           	bras 2262 <debug_stub+0x176>
    21f8:	007c 0700      	oriw #1792,%sr
    21fc:	48e7 ffff      	moveml %d0-%sp,%sp@-
    2200:	7402           	moveq #2,%d2
    2202:	605e           	bras 2262 <debug_stub+0x176>
    2204:	007c 0700      	oriw #1792,%sr
    2208:	48e7 ffff      	moveml %d0-%sp,%sp@-
    220c:	7404           	moveq #4,%d2
    220e:	6052           	bras 2262 <debug_stub+0x176>
    2210:	007c 0700      	oriw #1792,%sr
    2214:	48e7 ffff      	moveml %d0-%sp,%sp@-
    2218:	7406           	moveq #6,%d2
    221a:	6046           	bras 2262 <debug_stub+0x176>
    221c:	007c 0700      	oriw #1792,%sr
    2220:	48e7 ffff      	moveml %d0-%sp,%sp@-
    2224:	7408           	moveq #8,%d2
    2226:	603a           	bras 2262 <debug_stub+0x176>
    2228:	007c 0700      	oriw #1792,%sr
    222c:	48e7 ffff      	moveml %d0-%sp,%sp@-
    2230:	740a           	moveq #10,%d2
    2232:	602e           	bras 2262 <debug_stub+0x176>
    2234:	007c 0700      	oriw #1792,%sr
    2238:	48e7 ffff      	moveml %d0-%sp,%sp@-
    223c:	740c           	moveq #12,%d2
    223e:	6022           	bras 2262 <debug_stub+0x176>
    2240:	007c 0700      	oriw #1792,%sr
    2244:	48e7 ffff      	moveml %d0-%sp,%sp@-
    2248:	740e           	moveq #14,%d2
    224a:	6016           	bras 2262 <debug_stub+0x176>
    224c:	007c 0700      	oriw #1792,%sr
    2250:	48e7 ffff      	moveml %d0-%sp,%sp@-
    2254:	7410           	moveq #16,%d2
    2256:	600a           	bras 2262 <debug_stub+0x176>
    2258:	007c 0700      	oriw #1792,%sr
    225c:	48e7 ffff      	moveml %d0-%sp,%sp@-
    2260:	7412           	moveq #18,%d2
    2262:	3f6f 0040 fffe 	movew %sp@(64),%sp@(-2)
    2268:	206f 0042      	moveal %sp@(66),%a0
    226c:	2f48 fffa      	movel %a0,%sp@(-6)
    2270:	3f50 fff8      	movew %a0@,%sp@(-8)
    2274:	42af fff4      	clrl %sp@(-12)
    2278:	b47c 0004      	cmpw #4,%d2
    227c:	6c1c           	bges 229a <debug_stub+0x1ae>
    227e:	2f6f 004a fff4 	movel %sp@(74),%sp@(-12)
    2284:	6014           	bras 229a <debug_stub+0x1ae>
    2286:	fe7c           	.short 0xfe7c
    2288:	fe86           	.short 0xfe86
    228a:	fe94           	.short 0xfe94
    228c:	fea8           	.short 0xfea8
    228e:	feb9           	.short 0xfeb9
    2290:	fec9           	.short 0xfec9
    2292:	fedb           	.short 0xfedb
    2294:	feef           	.short 0xfeef
    2296:	fef5           	.short 0xfef5
    2298:	ff07           	.short 0xff07
    229a:	4fef fff4      	lea %sp@(-12),%sp
    229e:	43fa 00f4      	lea %pc@(2394 <stub_print>),%a1
    22a2:	41fa fefb      	lea %pc@(219f <debug_stub+0xb3>),%a0
    22a6:	4e91           	jsr %a1@
    22a8:	303b 20dc      	movew %pc@(2286 <debug_stub+0x19a>,%d2:w),%d0
    22ac:	41fb 00d8      	lea %pc@(2286 <debug_stub+0x19a>,%d0:w),%a0
    22b0:	4e91           	jsr %a1@
    22b2:	2417           	movel %sp@,%d2
    22b4:	6710           	beqs 22c6 <debug_stub+0x1da>
    22b6:	41fa ff01      	lea %pc@(21b9 <debug_stub+0xcd>),%a0
    22ba:	4e91           	jsr %a1@
    22bc:	6100 0098      	bsrw 2356 <printhex>
    22c0:	41fa ff05      	lea %pc@(21c7 <debug_stub+0xdb>),%a0
    22c4:	4e91           	jsr %a1@
    22c6:	41fa ff01      	lea %pc@(21c9 <debug_stub+0xdd>),%a0
    22ca:	4e91           	jsr %a1@
    22cc:	242f 0006      	movel %sp@(6),%d2
    22d0:	6100 0084      	bsrw 2356 <printhex>
    22d4:	41fa fef9      	lea %pc@(21cf <debug_stub+0xe3>),%a0
    22d8:	4e91           	jsr %a1@
    22da:	206f 0006      	moveal %sp@(6),%a0
    22de:	2410           	movel %a0@,%d2
    22e0:	7604           	moveq #4,%d3
    22e2:	6174           	bsrs 2358 <printhex_n>
    22e4:	41fa feee      	lea %pc@(21d4 <debug_stub+0xe8>),%a0
    22e8:	4e91           	jsr %a1@
    22ea:	242f 000a      	movel %sp@(10),%d2
    22ee:	7604           	moveq #4,%d3
    22f0:	6166           	bsrs 2358 <printhex_n>
    22f2:	41fa fee9      	lea %pc@(21dd <debug_stub+0xf1>),%a0
    22f6:	4e91           	jsr %a1@
    22f8:	4fef 000c      	lea %sp@(12),%sp
    22fc:	4e68           	movel %usp,%a0
    22fe:	2408           	movel %a0,%d2
    2300:	6154           	bsrs 2356 <printhex>
    2302:	41fa fee2      	lea %pc@(21e6 <debug_stub+0xfa>),%a0
    2306:	4e91           	jsr %a1@
    2308:	7800           	moveq #0,%d4
    230a:	41fa 0070      	lea %pc@(237c <stub_prchar>),%a0
    230e:	244f           	moveal %sp,%a2
    2310:	7064           	moveq #100,%d0
    2312:	b83c 0008      	cmpb #8,%d4
    2316:	6d02           	blts 231a <debug_stub+0x22e>
    2318:	7061           	moveq #97,%d0
    231a:	4e90           	jsr %a0@
    231c:	2004           	movel %d4,%d0
    231e:	c03c 0007      	andb #7,%d0
    2322:	614a           	bsrs 236e <hexdigit>
    2324:	4e90           	jsr %a0@
    2326:	703d           	moveq #61,%d0
    2328:	4e90           	jsr %a0@
    232a:	241a           	movel %a2@+,%d2
    232c:	6128           	bsrs 2356 <printhex>
    232e:	5284           	addql #1,%d4
    2330:	1004           	moveb %d4,%d0
    2332:	c03c 0003      	andb #3,%d0
    2336:	6706           	beqs 233e <debug_stub+0x252>
    2338:	7020           	moveq #32,%d0
    233a:	4e90           	jsr %a0@
    233c:	60d2           	bras 2310 <debug_stub+0x224>
    233e:	700d           	moveq #13,%d0
    2340:	4e90           	jsr %a0@
    2342:	700a           	moveq #10,%d0
    2344:	4e90           	jsr %a0@
    2346:	b83c 0010      	cmpb #16,%d4
    234a:	6dc4           	blts 2310 <debug_stub+0x224>
    234c:	027c f0ff      	andiw #-3841,%sr
    2350:	2078 0004      	moveal 4 <DUART_CRA>,%a0
    2354:	4ed0           	jmp %a0@

00002356 <printhex>:
    2356:	7608           	moveq #8,%d3

00002358 <printhex_n>:
    2358:	41fa 0022      	lea %pc@(237c <stub_prchar>),%a0
    235c:	e99a           	roll #4,%d2
    235e:	1002           	moveb %d2,%d0
    2360:	c07c 000f      	andw #15,%d0
    2364:	6108           	bsrs 236e <hexdigit>
    2366:	4e90           	jsr %a0@
    2368:	5303           	subqb #1,%d3
    236a:	66f0           	bnes 235c <printhex_n+0x4>
    236c:	4e75           	rts

0000236e <hexdigit>:
    236e:	b03c 000a      	cmpb #10,%d0
    2372:	6d02           	blts 2376 <hexdigit+0x8>
    2374:	5e00           	addqb #7,%d0
    2376:	d07c 0030      	addw #48,%d0
    237a:	4e75           	rts

0000237c <stub_prchar>:
    237c:	2f08           	movel %a0,%sp@-
    237e:	2078 0428      	moveal 428 <_EFP_PRINTCHAR>,%a0
    2382:	4e90           	jsr %a0@
    2384:	b1f8 0430      	cmpal 430 <_EFP_SENDCHAR>,%a0
    2388:	6706           	beqs 2390 <stub_prchar+0x14>
    238a:	2078 0430      	moveal 430 <_EFP_SENDCHAR>,%a0
    238e:	4e90           	jsr %a0@
    2390:	205f           	moveal %sp@+,%a0
    2392:	4e75           	rts

00002394 <stub_print>:
    2394:	2f09           	movel %a1,%sp@-
    2396:	2f08           	movel %a0,%sp@-
    2398:	2278 0420      	moveal 420 <_EFP_PRINT>,%a1
    239c:	4e91           	jsr %a1@
    239e:	2278 0428      	moveal 428 <_EFP_PRINTCHAR>,%a1
    23a2:	b3f8 0430      	cmpal 430 <_EFP_SENDCHAR>,%a1
    23a6:	205f           	moveal %sp@+,%a0
    23a8:	670c           	beqs 23b6 <stub_print+0x22>
    23aa:	2278 0430      	moveal 430 <_EFP_SENDCHAR>,%a1
    23ae:	1018           	moveb %a0@+,%d0
    23b0:	6704           	beqs 23b6 <stub_print+0x22>
    23b2:	4e91           	jsr %a1@
    23b4:	60f8           	bras 23ae <stub_print+0x1a>
    23b6:	225f           	moveal %sp@+,%a1
    23b8:	4e75           	rts

000023ba <__kinit>:

void *__dso_handle;

__attribute__((weak)) void __kinit() {
  // zero .bss
  for (uint32_t *dst = &_bss_start; dst < &_bss_end; *dst++ = 0);
    23ba:	41f9 0000 2468 	lea 2468 <_ctors>,%a0
    23c0:	b1fc 0000 5c78 	cmpal #23672,%a0
    23c6:	641c           	bccs 23e4 <__kinit+0x2a>
    23c8:	203c 0000 5c78 	movel #23672,%d0
    23ce:	0480 0000 2469 	subil #9321,%d0
    23d4:	72fc           	moveq #-4,%d1
    23d6:	c081           	andl %d1,%d0
    23d8:	0680 0000 246c 	addil #9324,%d0
    23de:	4298           	clrl %a0@+
    23e0:	b088           	cmpl %a0,%d0
    23e2:	66fa           	bnes 23de <__kinit+0x24>
}
    23e4:	4e75           	rts

000023e6 <__cxa_finalize>:
/*
 * We probably don't need the full dso_handle capability as we're always
 * statically linked, but I'd rather do a proper impl now than have it 
 * break later because of a half-baked one :D
 */
void __cxa_finalize(void *dso_handle) {
    23e6:	48e7 3020      	moveml %d2-%d3/%a2,%sp@-
    23ea:	262f 0010      	movel %sp@(16),%d3
    for (int i = cxa_atexit_count - 1; i >= 0; i--) {
    23ee:	7200           	moveq #0,%d1
    23f0:	3239 0000 2474 	movew 2474 <cxa_atexit_count>,%d1
    23f6:	2401           	movel %d1,%d2
    23f8:	5382           	subql #1,%d2
    23fa:	4a81           	tstl %d1
    23fc:	6738           	beqs 2436 <__cxa_finalize+0x50>
    23fe:	2001           	movel %d1,%d0
    2400:	e788           	lsll #3,%d0
    2402:	2440           	moveal %d0,%a2
    2404:	95c1           	subal %d1,%a2
    2406:	d5ca           	addal %a2,%a2
    2408:	d5fc 0000 2468 	addal #9320,%a2
        cxa_atexit_entry *entry = &cxa_atexits[i];

        if ((dso_handle == NULL || dso_handle == entry->dso_handle) && !entry->done) {
    240e:	4a83           	tstl %d3
    2410:	662a           	bnes 243c <__cxa_finalize+0x56>
    2412:	4a2a 000c      	tstb %a2@(12)
    2416:	6610           	bnes 2428 <__cxa_finalize+0x42>
            entry->func(entry->ptr);
    2418:	2f2a 0004      	movel %a2@(4),%sp@-
    241c:	2052           	moveal %a2@,%a0
    241e:	4e90           	jsr %a0@
            entry->done = true;
    2420:	157c 0001 000c 	moveb #1,%a2@(12)
    2426:	588f           	addql #4,%sp
    for (int i = cxa_atexit_count - 1; i >= 0; i--) {
    2428:	45ea fff2      	lea %a2@(-14),%a2
    242c:	51ca ffe0      	dbf %d2,240e <__cxa_finalize+0x28>
    2430:	4242           	clrw %d2
    2432:	5382           	subql #1,%d2
    2434:	64d8           	bccs 240e <__cxa_finalize+0x28>
        }
    }
}
    2436:	4cdf 040c      	moveml %sp@+,%d2-%d3/%a2
    243a:	4e75           	rts
        if ((dso_handle == NULL || dso_handle == entry->dso_handle) && !entry->done) {
    243c:	b6aa 0008      	cmpl %a2@(8),%d3
    2440:	67d0           	beqs 2412 <__cxa_finalize+0x2c>
    for (int i = cxa_atexit_count - 1; i >= 0; i--) {
    2442:	45ea fff2      	lea %a2@(-14),%a2
    2446:	51ca fff4      	dbf %d2,243c <__cxa_finalize+0x56>
    244a:	4242           	clrw %d2
    244c:	5382           	subql #1,%d2
    244e:	64ec           	bccs 243c <__cxa_finalize+0x56>
}
    2450:	4cdf 040c      	moveml %sp@+,%d2-%d3/%a2
    2454:	4e75           	rts
