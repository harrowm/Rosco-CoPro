
rosco_test.elf:     file format elf32-m68k


Disassembly of section .text.init:

00002000 <_init>:
    2000:	41fa fffe      	lea %pc@(2000 <_init>),%a0
    2004:	43f9 0000 2000 	lea 2000 <_init>,%a1
    200a:	203c 0000 20ac 	movel #8364,%d0
    2010:	9089           	subl %a1,%d0
    2012:	e488           	lsrl #2,%d0
    2014:	5380           	subql #1,%d0
    2016:	22d8           	movel %a0@+,%a1@+
    2018:	51c8 fffc      	dbf %d0,2016 <_init+0x16>
    201c:	4ef9 0000 2024 	jmp 2024 <_postinit>

Disassembly of section .text.postinit:

00002024 <_postinit>:
    2024:	203c 0000 221c 	movel #8732,%d0
    202a:	9089           	subl %a1,%d0
    202c:	e488           	lsrl #2,%d0
    202e:	2200           	movel %d0,%d1
    2030:	4841           	swap %d1
    2032:	6002           	bras 2036 <_postinit+0x12>
    2034:	22d8           	movel %a0@+,%a1@+
    2036:	51c8 fffc      	dbf %d0,2034 <_postinit+0x10>
    203a:	51c9 fff8      	dbf %d1,2034 <_postinit+0x10>

0000203e <_start>:
    203e:	2e78 0414      	moveal 414 <SDB_MEMSIZE>,%sp
    2042:	41f9 0000 2170 	lea 2170 <__kinit>,%a0
    2048:	4e90           	jsr %a0@
    204a:	611c           	bsrs 2068 <CALL_CTORS>
    204c:	41f9 0000 20ac 	lea 20ac <_postinit_end>,%a0
    2052:	4e90           	jsr %a0@

00002054 <exit>:
    2054:	42a7           	clrl %sp@-
    2056:	41f9 0000 219c 	lea 219c <__cxa_finalize>,%a0
    205c:	4e90           	jsr %a0@
    205e:	588f           	addql #4,%sp
    2060:	6128           	bsrs 208a <CALL_DTORS>
    2062:	2078 0490      	moveal 490 <EFP_PROG_EXIT>,%a0
    2066:	4ed0           	jmp %a0@

00002068 <CALL_CTORS>:
    2068:	48e7 0038      	moveml %a2-%a4,%sp@-
    206c:	45f9 0000 221c 	lea 221c <cxa_atexit_count>,%a2
    2072:	47f9 0000 221c 	lea 221c <cxa_atexit_count>,%a3
    2078:	598b           	subql #4,%a3
    207a:	b7ca           	cmpal %a2,%a3
    207c:	6506           	bcss 2084 <CALL_CTORS+0x1c>
    207e:	2853           	moveal %a3@,%a4
    2080:	4e94           	jsr %a4@
    2082:	60f4           	bras 2078 <CALL_CTORS+0x10>
    2084:	4cdf 1c00      	moveml %sp@+,%a2-%a4
    2088:	4e75           	rts

0000208a <CALL_DTORS>:
    208a:	48e7 0038      	moveml %a2-%a4,%sp@-
    208e:	45f9 0000 221c 	lea 221c <cxa_atexit_count>,%a2
    2094:	47f9 0000 221c 	lea 221c <cxa_atexit_count>,%a3
    209a:	b5cb           	cmpal %a3,%a2
    209c:	6708           	beqs 20a6 <CALL_DTORS+0x1c>
    209e:	2852           	moveal %a2@,%a4
    20a0:	4e94           	jsr %a4@
    20a2:	588a           	addql #4,%a2
    20a4:	60f4           	bras 209a <CALL_DTORS+0x10>
    20a6:	4cdf 1c00      	moveml %sp@+,%a2-%a4
    20aa:	4e75           	rts

Disassembly of section .text:

000020ac <_code>:
    20ac:	21fc 0000 2110 	movel #8464,2c <R_STOPCNTCMD+0xe>
    20b2:	002c 
    20b4:	23f8 0008 0000 	movel 8 <DUART_ACR>,212c <BERR>
    20ba:	212c 
    20bc:	21fc 0000 20fe 	movel #8446,8 <DUART_ACR>
    20c2:	0008 
    20c4:	2039 0010 0000 	movel 100000 <_LOAD_ADDRESS+0xc0000>,%d0
    20ca:	21fa 0060 0008 	movel %pc@(212c <BERR>),8 <DUART_ACR>
    20d0:	41fa 005e      	lea %pc@(2130 <TEST>),%a0
    20d4:	614a           	bsrs 2120 <mcprintln>
    20d6:	f200 5c00      	fmovecrx #0,%fp0
    20da:	f200 0003      	fintrzx %fp0,%fp0
    20de:	f201 6000      	fmovel %fp0,%d1
    20e2:	700f           	moveq #15,%d0
    20e4:	143c 000a      	moveb #10,%d2
    20e8:	4e4f           	trap #15
    20ea:	41fa 0058      	lea %pc@(2144 <BLANK>),%a0
    20ee:	6130           	bsrs 2120 <mcprintln>
    20f0:	41fa 0053      	lea %pc@(2145 <ANSWER>),%a0
    20f4:	612a           	bsrs 2120 <mcprintln>
    20f6:	41fa 0047      	lea %pc@(213f <GOOD>),%a0
    20fa:	6124           	bsrs 2120 <mcprintln>

000020fc <exit>:
    20fc:	4e75           	rts

000020fe <berr>:
    20fe:	2f00           	movel %d0,%sp@-
    2100:	302f 000e      	movew %sp@(14),%d0
    2104:	0880 0008      	bclr #8,%d0
    2108:	3f40 000e      	movew %d0,%sp@(14)
    210c:	201f           	movel %sp@+,%d0
    210e:	4e73           	rte

00002110 <trap>:
    2110:	41fa 0026      	lea %pc@(2138 <BANG>),%a0
    2114:	610a           	bsrs 2120 <mcprintln>
    2116:	2f7c 0000 20fc 	movel #8444,%sp@(2)
    211c:	0002 
    211e:	4e73           	rte

00002120 <mcprintln>:
    2120:	2f08           	movel %a0,%sp@-
    2122:	4eb9 0000 215e 	jsr 215e <mcPrintln>
    2128:	588f           	addql #4,%sp
    212a:	4e75           	rts

0000212c <BERR>:
    212c:	0000 0000      	orib #0,%d0

00002130 <TEST>:
    2130:	5445           	addqw #2,%d5
    2132:	5354           	subqw #1,%a4@
    2134:	494e           	.short 0x494e
    2136:	4700           	.short 0x4700

00002138 <BANG>:
    2138:	462d 4c69      	notb %a5@(19561)
    213c:	6e65           	bgts 21a3 <__cxa_finalize+0x7>
	...

0000213f <GOOD>:
    213f:	4f6b           	.short 0x4f6b
    2141:	6179           	bsrs 21bc <__cxa_finalize+0x20>
	...

00002144 <BLANK>:
	...

00002145 <ANSWER>:
    2145:	416e           	.short 0x416e
    2147:	7377           	.short 0x7377
    2149:	6572           	bcss 21bd <__cxa_finalize+0x21>
    214b:	2061           	moveal %a1@-,%a0
    214d:	626f           	bhis 21be <__cxa_finalize+0x22>
    214f:	7665           	moveq #101,%d3
    2151:	2073 686f      	moveal %a3@(6f,%d6:l),%a0
    2155:	756c           	.short 0x756c
    2157:	6420           	bccs 2179 <__kinit+0x9>
    2159:	6265           	bhis 21c0 <__cxa_finalize+0x24>
    215b:	
0000215e <mcPrintln>:
    215e:	48e7 c080      	moveml %d0-%d1/%a0,%sp@-
    2162:	206f 0010      	moveal %sp@(16),%a0
    2166:	7201           	moveq #1,%d1
    2168:	4e4e           	trap #14
    216a:	4cdf 0103      	moveml %sp@+,%d0-%d1/%a0
    216e:	4e75           	rts

00002170 <__kinit>:

void *__dso_handle;

__attribute__((weak)) void __kinit() {
  // zero .bss
  for (uint32_t *dst = &_bss_start; dst < &_bss_end; *dst++ = 0);
    2170:	41f9 0000 221c 	lea 221c <_ctors>,%a0
    2176:	b1fc 0000 5a20 	cmpal #23072,%a0
    217c:	641c           	bccs 219a <__kinit+0x2a>
    217e:	203c 0000 5a20 	movel #23072,%d0
    2184:	0480 0000 221d 	subil #8733,%d0
    218a:	72fc           	moveq #-4,%d1
    218c:	c081           	andl %d1,%d0
    218e:	0680 0000 2220 	addil #8736,%d0
    2194:	4298           	clrl %a0@+
    2196:	b088           	cmpl %a0,%d0
    2198:	66fa           	bnes 2194 <__kinit+0x24>
}
    219a:	4e75           	rts

0000219c <__cxa_finalize>:
/*
 * We probably don't need the full dso_handle capability as we're always
 * statically linked, but I'd rather do a proper impl now than have it 
 * break later because of a half-baked one :D
 */
void __cxa_finalize(void *dso_handle) {
    219c:	48e7 3020      	moveml %d2-%d3/%a2,%sp@-
    21a0:	262f 0010      	movel %sp@(16),%d3
    for (int i = cxa_atexit_count - 1; i >= 0; i--) {
    21a4:	7200           	moveq #0,%d1
    21a6:	3239 0000 221c 	movew 221c <_ctors>,%d1
    21ac:	2401           	movel %d1,%d2
    21ae:	5382           	subql #1,%d2
    21b0:	4a81           	tstl %d1
    21b2:	6738           	beqs 21ec <__cxa_finalize+0x50>
    21b4:	2001           	movel %d1,%d0
    21b6:	e788           	lsll #3,%d0
    21b8:	2440           	moveal %d0,%a2
    21ba:	95c1           	subal %d1,%a2
    21bc:	d5ca           	addal %a2,%a2
    21be:	d5fc 0000 2210 	addal #8720,%a2
        cxa_atexit_entry *entry = &cxa_atexits[i];

        if ((dso_handle == NULL || dso_handle == entry->dso_handle) && !entry->done) {
    21c4:	4a83           	tstl %d3
    21c6:	662a           	bnes 21f2 <__cxa_finalize+0x56>
    21c8:	4a2a 000c      	tstb %a2@(12)
    21cc:	6610           	bnes 21de <__cxa_finalize+0x42>
            entry->func(entry->ptr);
    21ce:	2f2a 0004      	movel %a2@(4),%sp@-
    21d2:	2052           	moveal %a2@,%a0
    21d4:	4e90           	jsr %a0@
            entry->done = true;
    21d6:	157c 0001 000c 	moveb #1,%a2@(12)
    21dc:	588f           	addql #4,%sp
    for (int i = cxa_atexit_count - 1; i >= 0; i--) {
    21de:	45ea fff2      	lea %a2@(-14),%a2
    21e2:	51ca ffe0      	dbf %d2,21c4 <__cxa_finalize+0x28>
    21e6:	4242           	clrw %d2
    21e8:	5382           	subql #1,%d2
    21ea:	64d8           	bccs 21c4 <__cxa_finalize+0x28>
        }
    }
}
    21ec:	4cdf 040c      	moveml %sp@+,%d2-%d3/%a2
    21f0:	4e75           	rts
        if ((dso_handle == NULL || dso_handle == entry->dso_handle) && !entry->done) {
    21f2:	b6aa 0008      	cmpl %a2@(8),%d3
    21f6:	67d0           	beqs 21c8 <__cxa_finalize+0x2c>
    for (int i = cxa_atexit_count - 1; i >= 0; i--) {
    21f8:	45ea fff2      	lea %a2@(-14),%a2
    21fc:	51ca fff4      	dbf %d2,21f2 <__cxa_finalize+0x56>
    2200:	4242           	clrw %d2
    2202:	5382           	subql #1,%d2
    2204:	64ec           	bccs 21f2 <__cxa_finalize+0x56>
}
    2206:	4cdf 040c      	moveml %sp@+,%d2-%d3/%a2
    220a:	4e75           	rts
